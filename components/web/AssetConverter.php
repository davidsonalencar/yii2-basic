<?php
/**
 * @author Davidson Alencar <davidson.t.i@gmail.com>
 */

namespace app\components\web;

/**
 * @inheritdoc
 */
class AssetConverter extends \yii\web\AssetConverter {

    /**
     * Verifica se existe alterações nos arquivos importados
     * 
     * @param string $basePath asset base path and command working directory
     * @param string $asset the name of the asset file
     * @param string $result the name of the file to be generated by the converter command
     * @return boolean Retorna true caso exista alterações dos arquivos importados
     */
    protected function hasImportFilesChanged($basePath, $asset, $result) {
        
        $asset = str_replace('\\', '/', $asset);
        
        $baseImportPath = $basePath.preg_replace('/[^\/]*$/', '', $asset);
        $ext = preg_replace('/^[^\.]*/', '', $asset);
        
        $contentFile = file_get_contents("$basePath/$asset");
        
        preg_match_all('/(?#=@import)\\s*\\(?\\s*[\'"].*[\'"]\\s*\\)?/', $contentFile, $imports);
        
        foreach ($imports[0] as $import) {
            $import = preg_replace('/\s|(url)|\\(|\\)|\'|"/', '', $import);
            if (strrpos($import, '.') === false) {
                $import .= $ext;
            }
            if (@filemtime("$basePath/$result") < filemtime("$baseImportPath/$import")) {
                return true;
            }
        }
        return false;
    }

    /**
     * @inheritdoc
     */
    public function convert($asset, $basePath) {
        
        $pos = strrpos($asset, '.');
        if ($pos !== false) {
            $ext = substr($asset, $pos + 1);
            if (isset($this->commands[$ext])) {
                list ($ext, $command) = $this->commands[$ext];
                $result = substr($asset, 0, $pos + 1) . $ext;
                if ( YII_ENV_DEV &&
                     ( @filemtime("$basePath/$result") < filemtime("$basePath/$asset") ||
                       $this->hasImportFilesChanged($basePath, $asset, $result) ) ) {
                    $this->runCommand($command, $basePath, $asset, $result);
                } 
                
                return $result;
            }
        }

        return $asset;
    }

}
